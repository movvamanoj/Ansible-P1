---
    - name: Add hosts to python_servers group
      add_host:
        name: "{{ item }}"
        groups: python_servers
      loop: "{{ groups['python_servers'] }}"
      when: include_run_py_script_tasks | default(false)

    - name: Cloning Ansible-p1 from Git repository
      win_shell: |
        if (Test-Path -Path "{{ temp_folder }}") {
          Remove-Item -Path "{{ temp_folder }}" -Recurse -Force
        }
        git clone "{{ git_repo_url | regex_replace('https://', 'https://'+git_access_token+'@') }}" "{{ temp_folder }}"
      args:
        executable: powershell.exe
      delegate_to: "{{ item }}"
      loop: "{{ groups['python_servers'] }}"
      when: include_run_py_script_tasks | default(false)

    - name: Copy Python script to temp
      win_shell: Copy-Item -Path "{{ temp_folder }}{{ run_py_script_path }}" -Destination "{{ temp_path }}" -Force
      delegate_to: "{{ item }}"
      loop: "{{ groups['python_servers'] }}"
      when: include_run_py_script_tasks | default(false)

    - name: Execute Python script
      win_shell: python "{{ temp_path }}\{{ run_py_script_name }}"
      args:
        executable: powershell.exe
      register: python_script_output
      delegate_to: "{{ item }}"
      loop: "{{ groups['python_servers'] }}"
      when: include_run_py_script_tasks | default(false)

    - name: Display Python script output
      debug:
        var: python_script_output.stdout_lines
      delegate_to: "{{ item }}"
      loop: "{{ groups['python_servers'] }}"

    - name: Save Python script output to a file
      lineinfile:
        path: "{{ temp_path }}/output_file.txt"
        create: yes
        line: "{{ python_script_output.stdout_lines | join('\n') }}"
      delegate_to: "{{ item }}"
      loop: "{{ groups['python_servers'] }}"
      when: python_script_output is defined and python_script_output.rc is defined and python_script_output.rc == 0 and include_run_py_script_tasks | default(false)

    - name: Delete Git cloned Ansible-p1 repository from Win
      win_shell: Remove-Item -Path "{{ temp_folder }}" -Recurse -Force
      args:
        executable: powershell.exe
      delegate_to: "{{ item }}"
      loop: "{{ groups['python_servers'] }}"

# shell
# ---
# - name: Copy Python script to temp
#   copy:
#     src: "{{ temp_folder }}{{ run_py_script_path }}"
#     dest: "{{ temp_path }}"
#     mode: '0755'  # Ensure the script is executable

# - name: Display running processes before executing Python script
#   shell: ps aux
#   register: processes_before

# - name: Execute Python script
#   command: "{{ temp_path }}/{{ run_py_script_path }}"
#   register: python_script_output

# - name: Display running processes after executing Python script
#   shell: ps aux
#   register: processes_after

# - name: Display Python script output
#   debug:
#     var: python_script_output.stdout_lines
