#
#   # Git Account Details
#   git_repo_url: "https://github.com/movvamanoj/win-powershell.git"
#   git_access_token: "ghp_"
#  
#  # Temporary Folder
#   temp_folder_PowerShell: "C:\\Temp\\PowerShell"
#   temp_path_PowerShell: "C:\\Temp\\PowerShell"
#  
#   # PowerShell Script Configuration
    #script_path: "\\scripts\\auto-disk-setup.ps1"
#   #script_name: "auto-disk-setup.ps1"
#



    - name: Check if Temp folder exists
      win_stat:
          path: "{{ temp_path_PowerShell }}"
      register: temp_folder_stat

    - name: Create Temp folder if it doesn't exist
      win_file:
        path: "{{ temp_path_PowerShell }}"
        state: directory
      when: not temp_folder_stat.stat.exists

    - name: Clone private Git repository
      win_shell: |
        if (Test-Path -Path "{{ temp_folder_PowerShell }}") {
          Remove-Item -Path "{{ temp_folder_PowerShell }}" -Recurse -Force
        }
        git clone "{{ git_repo_url | regex_replace('https://', 'https://'+git_access_token+'@') }}" "{{ temp_folder_PowerShell }}"
      args:
        executable: powershell.exe

    - name: Copy script_name to temp
      win_shell: |
        Copy-Item -Path "{{ temp_folder_PowerShell }}{{ script_path }}" -Destination "{{ temp_path_PowerShell }}" -Force
      become: true
      become_user: Administrator
      args:
        executable: powershell.exe

    - name: Execute PowerShell script
      win_shell: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        . "{{ temp_path_PowerShell }}\{{ script_name }}"
      become: true
      become_user: Administrator
      args:
        executable: powershell.exe

    - name: Delete cloned Git repository
      win_shell: Remove-Item -Path "{{ temp_folder_PowerShell }}" -Recurse -Force
      become: true
      become_user: Administrator
      args:
        executable: powershell.exe

    - name: Delete PowerShell script file
      win_shell: Remove-Item -Path "{{ temp_path_PowerShell }}\{{ script_name }}" -Force
      become: true
      become_user: Administrator
      args:
        executable: powershell.exe
